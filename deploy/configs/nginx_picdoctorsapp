# I got this from the optimizing SSL guide: http://nginx.org/en/docs/http/configuring_https_servers.html
ssl_session_cache   shared:SSL:10m;
ssl_session_timeout 10m;
server_names_hash_bucket_size  64;

# Redirect http://picdoctors.com to https://www.picdoctors.com
server {
    listen 80;
    client_max_body_size 50m;
    server_name picdoctors.com;
    rewrite ^(.*) https://rewrite_redirect_host$1 permanent;
}

# Redirect http://www.picdoctors.com to https://www.picdoctors.com
server {
    listen 80;
    client_max_body_size 50m;
    server_name www.picdoctors.com;
    rewrite ^(.*) https://rewrite_redirect_host$1 permanent;
}

# Redirect https://picdoctors.com to https://www.picdoctors.com
# TODO - I think I need to do this on a second IP address. Is that
# true?
#server {
#    listen 443;
#    server_name picdoctors.com;
#    rewrite ^(.*) https://www.picdoctors.com$1 permanent;
#    ssl on;
#    ssl_certificate /home/ubuntu/picdoctors_bundle.crt;
#    ssl_certificate_key /home/ubuntu/picdoctors_nopassword.key;
#}
# Above is temporarily disabled while I figure out the cert problems

server {
    # To ensure you do not cause issues with certificates,
    # explicitly bind the domain to its intended IP.
    # listen 1.1.1.1:443;
    listen 443 default_server;
    client_max_body_size 50m;
    server_name www.picdoctors.com;
    root /code/picdoctors;

    location /static/ {
        alias /code/picdoctors/static_out/;
        #include /etc/nginx/gzip.conf;
        expires 30d;
        access_log off;
    }

    location /sha {
        alias /code/picdoctors/sha.txt;
    }

    location /favicon.ico {
        alias /code/picdoctors/static/images/favicon.ico;
    }

    location /robots.txt {
        alias /code/picdoctors/static/rootdir/robots.txt;
    }

    location / {
        # TODO: Remove these next 2 lines when we want to let people actually go to the site
        #COMMENT_OUT_IF_DEBUG auth_basic "Restricted";
        #COMMENT_OUT_IF_DEBUG auth_basic_user_file htpasswd; # /etc/nginx/htpasswd

        include uwsgi_params;
        # django looks for this to make sure it's an ssl site so it doesn't break redirects
        uwsgi_param UWSGI_SCHEME https;
        uwsgi_pass unix:/tmp/picdoctorsapp.sock;

        if (-f $document_root/templates/maintenance.html) {
                return 503;
        }
    }

    # If you need to block the page for maintenance or something, place the maintenance.html file
    # in the template directory (or rename the maintenance.off to maintenance.html) and reset nginx
    error_page 503 @maintenance;
    location @maintenance {
        rewrite ^(.*)$ /templates/maintenance.html break;
    }

    # ssl stuff
    ssl on;
    ssl_certificate /code/picdoctors/deploy/configs/certs/picdoctors_bundle.crt;
    ssl_certificate_key /code/picdoctors/deploy/configs/certs/picdoctors_nopassword.key;

}

